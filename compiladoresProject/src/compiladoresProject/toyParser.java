/* toyParser.java */
/* Generated By:JavaCC: Do not edit this line. toyParser.java */
package compiladoresProject;

public class toyParser implements toyParserConstants {

  public static void main(String args[]) throws ParseException
    {
        toyParser parser = new toyParser(System.in);
        while (true)
        {
                parser.programa();

        }
    }

/** Aqui come�a a defini��o da gram�tica da Toy.
 * Cada s�mbolo n�o-terminal � escrito na nota��o de um m�todo.
 */
  static final public 
void programa() throws ParseException {
    jj_consume_token(PROGRAM);
    id();
    jj_consume_token(SEMICOLON);
    if (jj_2_1(2)) {
      declaracoes();
    } else if (jj_2_2(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    comando_composto();
    jj_consume_token(DOT);
}

  static final public void declaracoes() throws ParseException {
    declaracao();
    label_1:
    while (true) {
      if (jj_2_3(2)) {
        ;
      } else {
        break label_1;
      }
      if (jj_2_4(2)) {
        jj_consume_token(SEMICOLON);
        declaracao();
      } else if (jj_2_5(2)) {
        declaracao();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
}

  static final public void declaracao() throws ParseException {
    if (jj_2_6(2)) {
      declaracao_variavel();
    } else if (jj_2_7(2)) {
      declaracao_constante();
    } else if (jj_2_8(2)) {
      declaracao_procedimento();
    } else if (jj_2_9(2)) {
      declaracao_funcao();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void declaracao_variavel() throws ParseException {
    jj_consume_token(VAR);
    lista_ids();
    jj_consume_token(COLON);
    alocacao();
    tipo();
}

  static final public void alocacao() throws ParseException {
    if (jj_2_10(2)) {
      jj_consume_token(STATIC);
    } else if (jj_2_11(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void declaracao_constante() throws ParseException {
    jj_consume_token(CONST);
    lista_ids();
    jj_consume_token(EQ);
    expressao();
}

  static final public void lista_ids() throws ParseException {
    id();
    label_2:
    while (true) {
      if (jj_2_12(2)) {
        ;
      } else {
        break label_2;
      }
      jj_consume_token(COMMA);
      id();
    }
}

  static final public void comando_composto() throws ParseException {
    jj_consume_token(BEGIN);
    if (jj_2_13(2)) {
      lista_comandos();
    } else if (jj_2_14(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(END);
}

  static final public void lista_comandos() throws ParseException {
    comando();
    label_3:
    while (true) {
      if (jj_2_15(2)) {
        ;
      } else {
        break label_3;
      }
      jj_consume_token(SEMICOLON);
      comando();
    }
}

  static final public void comando() throws ParseException {
    if (jj_2_16(2)) {
      comando_composto();
    } else if (jj_2_17(2)) {
      comando_condicional();
    } else if (jj_2_18(2)) {
      comando_iterativo();
    } else if (jj_2_19(2)) {
      atribuicao();
    } else if (jj_2_20(2)) {
      chamada_procedimento();
    } else if (jj_2_21(2)) {
      chamada_funcao();
    } else if (jj_2_22(2)) {
      retorno_funcao();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void comando_condicional() throws ParseException {
    jj_consume_token(IF);
    expressao();
    jj_consume_token(THEN);
    comando();
    if (jj_2_23(2)) {
      vazio();
    } else if (jj_2_24(2)) {
      jj_consume_token(ELSE);
      comando();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void comando_iterativo() throws ParseException {
    if (jj_2_25(2)) {
      jj_consume_token(WHILE);
      expressao();
      jj_consume_token(DO);
      comando();
    } else if (jj_2_26(2)) {
      jj_consume_token(REPEAT);
      lista_comandos();
      jj_consume_token(UNTIL);
      expressao();
    } else if (jj_2_27(2)) {
      jj_consume_token(FOR);
      nome();
      jj_consume_token(ASSIGN);
      expressao();
      jj_consume_token(TO);
      expressao();
    } else if (jj_2_28(2)) {
      jj_consume_token(STEP);
      expressao();
      jj_consume_token(DO);
      comando();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void atribuicao() throws ParseException {
    nome();
    jj_consume_token(ASSIGN);
    expressao();
}

  static final public void chamada_procedimento() throws ParseException {
    id();
    jj_consume_token(LPAREN);
    if (jj_2_29(2)) {
      lista_expressoes();
    } else if (jj_2_30(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(RPAREN);
}

  static final public void chamada_funcao() throws ParseException {
    id();
    jj_consume_token(LPAREN);
    if (jj_2_31(2)) {
      lista_expressoes();
    } else if (jj_2_32(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(RPAREN);
}

  static final public void retorno_funcao() throws ParseException {
    jj_consume_token(RETURN);
    jj_consume_token(LPAREN);
    expressao();
    jj_consume_token(RPAREN);
}

  static final public void tipo() throws ParseException {
    if (jj_2_33(2)) {
      tipo_simples();
    } else if (jj_2_34(2)) {
      tipo_agregado();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void tipo_simples() throws ParseException {
    if (jj_2_35(2)) {
      jj_consume_token(FLOAT);
    } else if (jj_2_36(2)) {
      jj_consume_token(INTEGER);
    } else if (jj_2_37(2)) {
      jj_consume_token(BOOLEAN);
    } else if (jj_2_38(2)) {
      jj_consume_token(CHAR);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void tipo_agregado() throws ParseException {
    agregado_homogeneo();
}

  static final public void agregado_homogeneo() throws ParseException {
    jj_consume_token(ARRAY);
    jj_consume_token(LBRACKET);
    expressao();
    jj_consume_token(RBRACKET);
    jj_consume_token(OF);
    tipo();
}

  static final public void lista_campos_mesmo_tipo() throws ParseException {
    lista_ids();
    jj_consume_token(COLON);
    tipo();
}

  static final public void lista_expressoes() throws ParseException {
    expressao();
    label_4:
    while (true) {
      if (jj_2_39(2)) {
        ;
      } else {
        break label_4;
      }
      jj_consume_token(COMMA);
      expressao();
    }
}

  static final public void declaracao_procedimento() throws ParseException {
    jj_consume_token(PROCEDURE);
    id();
    jj_consume_token(LPAREN);
    if (jj_2_40(2)) {
      parametros();
    } else if (jj_2_41(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(RPAREN);
    jj_consume_token(SEMICOLON);
    if (jj_2_42(2)) {
      declaracoes();
    } else if (jj_2_43(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    comando_composto();
}

  static final public void declaracao_funcao() throws ParseException {
    jj_consume_token(FUNCTION);
    id();
    jj_consume_token(LPAREN);
    if (jj_2_44(2)) {
      parametros();
    } else if (jj_2_45(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(RPAREN);
    jj_consume_token(COLON);
    tipo_simples();
    jj_consume_token(SEMICOLON);
    if (jj_2_46(2)) {
      declaracoes();
    } else if (jj_2_47(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    comando_composto();
}

  static final public void parametros() throws ParseException {
    lista_campos_qualificados();
    label_5:
    while (true) {
      if (jj_2_48(2)) {
        ;
      } else {
        break label_5;
      }
      jj_consume_token(SEMICOLON);
      lista_campos_qualificados();
    }
}

  static final public void lista_campos_qualificados() throws ParseException {
    if (jj_2_49(2)) {
      jj_consume_token(REF);
    } else if (jj_2_50(2)) {
      jj_consume_token(VALUE);
    } else if (jj_2_51(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    lista_campos_mesmo_tipo();
}

  static final public void expressao() throws ParseException {
    expressao_simples();
    if (jj_2_52(2)) {
      op_relacional();
      expressao_simples();
    } else if (jj_2_53(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void expressao_simples() throws ParseException {
    op_unario();
    termo();
    label_6:
    while (true) {
      if (jj_2_54(2)) {
        ;
      } else {
        break label_6;
      }
      op_aditivo();
      termo();
    }
}

  static final public void termo() throws ParseException {
    fator();
    label_7:
    while (true) {
      if (jj_2_55(2)) {
        ;
      } else {
        break label_7;
      }
      op_multiplicativo();
      fator();
    }
}

  static final public void fator() throws ParseException {
    if (jj_2_59(2)) {
      id();
      label_8:
      while (true) {
        if (jj_2_56(2)) {
          ;
        } else {
          break label_8;
        }
        jj_consume_token(LBRACKET);
        expressao();
        jj_consume_token(RBRACKET);
      }
    } else if (jj_2_60(2)) {
      jj_consume_token(LPAREN);
      if (jj_2_57(2)) {
        lista_expressoes();
      } else if (jj_2_58(2)) {
        vazio();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      jj_consume_token(RPAREN);
    } else if (jj_2_61(2)) {
      literal();
    } else if (jj_2_62(2)) {
      jj_consume_token(NOT);
      fator();
    } else if (jj_2_63(2)) {
      jj_consume_token(LPAREN);
      expressao();
      jj_consume_token(RPAREN);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void nome() throws ParseException {
    id();
    label_9:
    while (true) {
      if (jj_2_64(2)) {
        ;
      } else {
        break label_9;
      }
      jj_consume_token(LBRACKET);
      expressao();
      jj_consume_token(RBRACKET);
    }
}

  static final public void op_relacional() throws ParseException {
    if (jj_2_65(2)) {
      jj_consume_token(EQ);
    } else if (jj_2_66(2)) {
      jj_consume_token(GT);
    } else if (jj_2_67(2)) {
      jj_consume_token(LT);
    } else if (jj_2_68(2)) {
      jj_consume_token(LE);
    } else if (jj_2_69(2)) {
      jj_consume_token(GE);
    } else if (jj_2_70(2)) {
      jj_consume_token(NE);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void op_aditivo() throws ParseException {
    if (jj_2_71(2)) {
      jj_consume_token(PLUS);
    } else if (jj_2_72(2)) {
      jj_consume_token(MINUS);
    } else if (jj_2_73(2)) {
      jj_consume_token(OR);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void op_multiplicativo() throws ParseException {
    if (jj_2_74(2)) {
      jj_consume_token(MULTIPLY);
    } else if (jj_2_75(2)) {
      jj_consume_token(DIVIDE);
    } else if (jj_2_76(2)) {
      jj_consume_token(MOD);
    } else if (jj_2_77(2)) {
      jj_consume_token(AND);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void op_unario() throws ParseException {
    if (jj_2_78(2)) {
      jj_consume_token(PLUS);
    } else if (jj_2_79(2)) {
      jj_consume_token(MINUS);
    } else if (jj_2_80(2)) {
      vazio();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void literal() throws ParseException {
    if (jj_2_81(2)) {
      numero_inteiro();
    } else if (jj_2_82(2)) {
      numero_float();
    } else if (jj_2_83(2)) {
      jj_consume_token(TRUE);
    } else if (jj_2_84(2)) {
      jj_consume_token(FALSE);
    } else if (jj_2_85(2)) {
      caracter();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void caracter() throws ParseException {
    jj_consume_token(QUOTES);
    jj_consume_token(QUALQUER_CARACTER);
    jj_consume_token(QUOTES);
}

  static final public void id() throws ParseException {
    jj_consume_token(LETRA);
    label_10:
    while (true) {
      if (jj_2_86(2)) {
        ;
      } else {
        break label_10;
      }
      if (jj_2_87(2)) {
        jj_consume_token(LETRA);
      } else if (jj_2_88(2)) {
        jj_consume_token(DIGITO);
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
}

  static final public void numero_inteiro() throws ParseException {
    jj_consume_token(DIGITO);
    label_11:
    while (true) {
      if (jj_2_89(2)) {
        ;
      } else {
        break label_11;
      }
      jj_consume_token(DIGITO);
    }
}

  static final public void numero_float() throws ParseException {
    if (jj_2_92(2)) {
      numero_inteiro();
      jj_consume_token(DOT);
      if (jj_2_90(2)) {
        numero_inteiro();
      } else if (jj_2_91(2)) {
        vazio();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } else if (jj_2_93(2)) {
      jj_consume_token(DOT);
      numero_inteiro();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
}

  static final public void comentario() throws ParseException {
    jj_consume_token(LBRACE);
    jj_consume_token(SEQUANCIA_CARACTER_EXCETO_RBRACE);
    jj_consume_token(RBRACE);
}

  static final public void vazio() throws ParseException {
    jj_consume_token(LBRACE);
    jj_consume_token(RBRACE);
}

  static private boolean jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_1()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  static private boolean jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_2()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  static private boolean jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_3()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  static private boolean jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_4()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  static private boolean jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_5()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  static private boolean jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_6()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  static private boolean jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_7()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  static private boolean jj_2_8(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_8()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  static private boolean jj_2_9(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_9()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  static private boolean jj_2_10(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_10()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  static private boolean jj_2_11(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_11()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  static private boolean jj_2_12(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_12()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  static private boolean jj_2_13(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_13()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  static private boolean jj_2_14(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_14()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  static private boolean jj_2_15(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_15()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  static private boolean jj_2_16(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_16()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  static private boolean jj_2_17(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_17()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  static private boolean jj_2_18(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_18()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  static private boolean jj_2_19(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_19()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  static private boolean jj_2_20(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_20()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  static private boolean jj_2_21(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_21()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  static private boolean jj_2_22(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_22()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  static private boolean jj_2_23(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_23()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  static private boolean jj_2_24(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_24()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  static private boolean jj_2_25(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_25()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  static private boolean jj_2_26(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_26()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  static private boolean jj_2_27(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_27()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  static private boolean jj_2_28(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_28()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  static private boolean jj_2_29(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_29()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  static private boolean jj_2_30(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_30()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  static private boolean jj_2_31(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_31()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  static private boolean jj_2_32(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_32()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  static private boolean jj_2_33(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_33()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  static private boolean jj_2_34(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_34()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  static private boolean jj_2_35(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_35()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  static private boolean jj_2_36(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_36()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  static private boolean jj_2_37(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_37()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  static private boolean jj_2_38(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_38()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  static private boolean jj_2_39(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_39()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  static private boolean jj_2_40(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_40()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  static private boolean jj_2_41(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_41()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  static private boolean jj_2_42(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_42()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  static private boolean jj_2_43(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_43()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  static private boolean jj_2_44(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_44()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  static private boolean jj_2_45(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_45()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(44, xla); }
  }

  static private boolean jj_2_46(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_46()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(45, xla); }
  }

  static private boolean jj_2_47(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_47()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(46, xla); }
  }

  static private boolean jj_2_48(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_48()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(47, xla); }
  }

  static private boolean jj_2_49(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_49()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(48, xla); }
  }

  static private boolean jj_2_50(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_50()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(49, xla); }
  }

  static private boolean jj_2_51(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_51()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(50, xla); }
  }

  static private boolean jj_2_52(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_52()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(51, xla); }
  }

  static private boolean jj_2_53(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_53()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(52, xla); }
  }

  static private boolean jj_2_54(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_54()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(53, xla); }
  }

  static private boolean jj_2_55(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_55()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(54, xla); }
  }

  static private boolean jj_2_56(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_56()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(55, xla); }
  }

  static private boolean jj_2_57(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_57()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(56, xla); }
  }

  static private boolean jj_2_58(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_58()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(57, xla); }
  }

  static private boolean jj_2_59(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_59()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(58, xla); }
  }

  static private boolean jj_2_60(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_60()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(59, xla); }
  }

  static private boolean jj_2_61(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_61()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(60, xla); }
  }

  static private boolean jj_2_62(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_62()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(61, xla); }
  }

  static private boolean jj_2_63(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_63()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(62, xla); }
  }

  static private boolean jj_2_64(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_64()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(63, xla); }
  }

  static private boolean jj_2_65(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_65()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(64, xla); }
  }

  static private boolean jj_2_66(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_66()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(65, xla); }
  }

  static private boolean jj_2_67(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_67()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(66, xla); }
  }

  static private boolean jj_2_68(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_68()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(67, xla); }
  }

  static private boolean jj_2_69(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_69()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(68, xla); }
  }

  static private boolean jj_2_70(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_70()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(69, xla); }
  }

  static private boolean jj_2_71(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_71()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(70, xla); }
  }

  static private boolean jj_2_72(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_72()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(71, xla); }
  }

  static private boolean jj_2_73(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_73()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(72, xla); }
  }

  static private boolean jj_2_74(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_74()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(73, xla); }
  }

  static private boolean jj_2_75(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_75()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(74, xla); }
  }

  static private boolean jj_2_76(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_76()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(75, xla); }
  }

  static private boolean jj_2_77(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_77()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(76, xla); }
  }

  static private boolean jj_2_78(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_78()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(77, xla); }
  }

  static private boolean jj_2_79(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_79()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(78, xla); }
  }

  static private boolean jj_2_80(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_80()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(79, xla); }
  }

  static private boolean jj_2_81(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_81()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(80, xla); }
  }

  static private boolean jj_2_82(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_82()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(81, xla); }
  }

  static private boolean jj_2_83(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_83()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(82, xla); }
  }

  static private boolean jj_2_84(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_84()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(83, xla); }
  }

  static private boolean jj_2_85(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_85()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(84, xla); }
  }

  static private boolean jj_2_86(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_86()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(85, xla); }
  }

  static private boolean jj_2_87(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_87()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(86, xla); }
  }

  static private boolean jj_2_88(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_88()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(87, xla); }
  }

  static private boolean jj_2_89(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_89()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(88, xla); }
  }

  static private boolean jj_2_90(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_90()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(89, xla); }
  }

  static private boolean jj_2_91(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_91()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(90, xla); }
  }

  static private boolean jj_2_92(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_92()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(91, xla); }
  }

  static private boolean jj_2_93(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_93()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(92, xla); }
  }

  static private boolean jj_3_5()
 {
    if (jj_3R_declaracao_152_3_14()) return true;
    return false;
  }

  static private boolean jj_3_11()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3R_lista_comandos_182_5_20()
 {
    if (jj_3R_comando_187_5_21()) return true;
    return false;
  }

  static private boolean jj_3_90()
 {
    if (jj_3R_numero_inteiro_340_9_43()) return true;
    return false;
  }

  static private boolean jj_3_12()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_id_335_4_19()) return true;
    return false;
  }

  static private boolean jj_3R_comando_composto_177_5_22()
 {
    if (jj_scan_token(BEGIN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) return true;
    }
    return false;
  }

  static private boolean jj_3R_lista_ids_172_9_46()
 {
    if (jj_3R_id_335_4_19()) return true;
    return false;
  }

  static private boolean jj_3_7()
 {
    if (jj_3R_declaracao_constante_167_9_16()) return true;
    return false;
  }

  static private boolean jj_3R_declaracao_constante_167_9_16()
 {
    if (jj_scan_token(CONST)) return true;
    if (jj_3R_lista_ids_172_9_46()) return true;
    return false;
  }

  static private boolean jj_3R_vazio_355_11_13()
 {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  static private boolean jj_3_82()
 {
    if (jj_3R_numero_float_345_9_44()) return true;
    return false;
  }

  static private boolean jj_3_1()
 {
    if (jj_3R_declaracoes_147_3_12()) return true;
    return false;
  }

  static private boolean jj_3_57()
 {
    if (jj_3R_lista_expressoes_253_9_31()) return true;
    return false;
  }

  static private boolean jj_3_42()
 {
    if (jj_3R_declaracoes_147_3_12()) return true;
    return false;
  }

  static private boolean jj_3_89()
 {
    if (jj_scan_token(DIGITO)) return true;
    return false;
  }

  static private boolean jj_3_88()
 {
    if (jj_scan_token(DIGITO)) return true;
    return false;
  }

  static private boolean jj_3_10()
 {
    if (jj_scan_token(STATIC)) return true;
    return false;
  }

  static private boolean jj_3_53()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_77()
 {
    if (jj_scan_token(AND)) return true;
    return false;
  }

  static private boolean jj_3R_numero_float_345_9_44()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_92()) {
    jj_scanpos = xsp;
    if (jj_3_93()) return true;
    }
    return false;
  }

  static private boolean jj_3_92()
 {
    if (jj_3R_numero_inteiro_340_9_43()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  static private boolean jj_3_80()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_4()
 {
    if (jj_scan_token(SEMICOLON)) return true;
    if (jj_3R_declaracao_152_3_14()) return true;
    return false;
  }

  static private boolean jj_3_3()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_4()) {
    jj_scanpos = xsp;
    if (jj_3_5()) return true;
    }
    return false;
  }

  static private boolean jj_3R_declaracao_variavel_157_3_15()
 {
    if (jj_scan_token(VAR)) return true;
    if (jj_3R_lista_ids_172_9_46()) return true;
    return false;
  }

  static private boolean jj_3R_numero_inteiro_340_9_43()
 {
    if (jj_scan_token(DIGITO)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_89()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_87()
 {
    if (jj_scan_token(LETRA)) return true;
    return false;
  }

  static private boolean jj_3_86()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_87()) {
    jj_scanpos = xsp;
    if (jj_3_88()) return true;
    }
    return false;
  }

  static private boolean jj_3_76()
 {
    if (jj_scan_token(MOD)) return true;
    return false;
  }

  static private boolean jj_3R_declaracao_152_3_14()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_6()) {
    jj_scanpos = xsp;
    if (jj_3_7()) {
    jj_scanpos = xsp;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3_9()) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3_6()
 {
    if (jj_3R_declaracao_variavel_157_3_15()) return true;
    return false;
  }

  static private boolean jj_3_22()
 {
    if (jj_3R_retorno_funcao_223_9_28()) return true;
    return false;
  }

  static private boolean jj_3_70()
 {
    if (jj_scan_token(NE)) return true;
    return false;
  }

  static private boolean jj_3R_declaracoes_147_3_12()
 {
    if (jj_3R_declaracao_152_3_14()) return true;
    return false;
  }

  static private boolean jj_3_60()
 {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_57()) {
    jj_scanpos = xsp;
    if (jj_3_58()) return true;
    }
    return false;
  }

  static private boolean jj_3R_caracter_329_10_45()
 {
    if (jj_scan_token(QUOTES)) return true;
    if (jj_scan_token(QUALQUER_CARACTER)) return true;
    return false;
  }

  static private boolean jj_3R_id_335_4_19()
 {
    if (jj_scan_token(LETRA)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_86()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_73()
 {
    if (jj_scan_token(OR)) return true;
    return false;
  }

  static private boolean jj_3_69()
 {
    if (jj_scan_token(GE)) return true;
    return false;
  }

  static private boolean jj_3_75()
 {
    if (jj_scan_token(DIVIDE)) return true;
    return false;
  }

  static private boolean jj_3R_literal_324_9_42()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_81()) {
    jj_scanpos = xsp;
    if (jj_3_82()) {
    jj_scanpos = xsp;
    if (jj_3_83()) {
    jj_scanpos = xsp;
    if (jj_3_84()) {
    jj_scanpos = xsp;
    if (jj_3_85()) return true;
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3_81()
 {
    if (jj_3R_numero_inteiro_340_9_43()) return true;
    return false;
  }

  static private boolean jj_3_45()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_79()
 {
    if (jj_scan_token(MINUS)) return true;
    return false;
  }

  static private boolean jj_3_68()
 {
    if (jj_scan_token(LE)) return true;
    return false;
  }

  static private boolean jj_3_41()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_72()
 {
    if (jj_scan_token(MINUS)) return true;
    return false;
  }

  static private boolean jj_3_21()
 {
    if (jj_3R_chamada_funcao_218_9_27()) return true;
    return false;
  }

  static private boolean jj_3R_op_unario_319_4_48()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_78()) {
    jj_scanpos = xsp;
    if (jj_3_79()) {
    jj_scanpos = xsp;
    if (jj_3_80()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3R_op_multiplicativo_314_9_40()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_74()) {
    jj_scanpos = xsp;
    if (jj_3_75()) {
    jj_scanpos = xsp;
    if (jj_3_76()) {
    jj_scanpos = xsp;
    if (jj_3_77()) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3_78()
 {
    if (jj_scan_token(PLUS)) return true;
    return false;
  }

  static private boolean jj_3_74()
 {
    if (jj_scan_token(MULTIPLY)) return true;
    return false;
  }

  static private boolean jj_3_67()
 {
    if (jj_scan_token(LT)) return true;
    return false;
  }

  static private boolean jj_3R_op_aditivo_309_9_38()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_71()) {
    jj_scanpos = xsp;
    if (jj_3_72()) {
    jj_scanpos = xsp;
    if (jj_3_73()) return true;
    }
    }
    return false;
  }

  static private boolean jj_3_71()
 {
    if (jj_scan_token(PLUS)) return true;
    return false;
  }

  static private boolean jj_3_66()
 {
    if (jj_scan_token(GT)) return true;
    return false;
  }

  static private boolean jj_3_51()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_54()
 {
    if (jj_3R_op_aditivo_309_9_38()) return true;
    if (jj_3R_termo_288_9_39()) return true;
    return false;
  }

  static private boolean jj_3R_op_relacional_304_5_36()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_65()) {
    jj_scanpos = xsp;
    if (jj_3_66()) {
    jj_scanpos = xsp;
    if (jj_3_67()) {
    jj_scanpos = xsp;
    if (jj_3_68()) {
    jj_scanpos = xsp;
    if (jj_3_69()) {
    jj_scanpos = xsp;
    if (jj_3_70()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3_64()
 {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_expressao_278_9_29()) return true;
    return false;
  }

  static private boolean jj_3_65()
 {
    if (jj_scan_token(EQ)) return true;
    return false;
  }

  static private boolean jj_3_52()
 {
    if (jj_3R_op_relacional_304_5_36()) return true;
    if (jj_3R_expressao_simples_283_9_37()) return true;
    return false;
  }

  static private boolean jj_3_55()
 {
    if (jj_3R_op_multiplicativo_314_9_40()) return true;
    if (jj_3R_fator_293_5_41()) return true;
    return false;
  }

  static private boolean jj_3_48()
 {
    if (jj_scan_token(SEMICOLON)) return true;
    if (jj_3R_lista_campos_qualificados_273_9_35()) return true;
    return false;
  }

  static private boolean jj_3R_nome_298_5_30()
 {
    if (jj_3R_id_335_4_19()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_64()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3_56()
 {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_expressao_278_9_29()) return true;
    return false;
  }

  static private boolean jj_3R_fator_293_5_41()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_59()) {
    jj_scanpos = xsp;
    if (jj_3_60()) {
    jj_scanpos = xsp;
    if (jj_3_61()) {
    jj_scanpos = xsp;
    if (jj_3_62()) {
    jj_scanpos = xsp;
    if (jj_3_63()) return true;
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3_59()
 {
    if (jj_3R_id_335_4_19()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_56()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  static private boolean jj_3R_termo_288_9_39()
 {
    if (jj_3R_fator_293_5_41()) return true;
    return false;
  }

  static private boolean jj_3_44()
 {
    if (jj_3R_parametros_268_9_34()) return true;
    return false;
  }

  static private boolean jj_3R_expressao_simples_283_9_37()
 {
    if (jj_3R_op_unario_319_4_48()) return true;
    if (jj_3R_termo_288_9_39()) return true;
    return false;
  }

  static private boolean jj_3_50()
 {
    if (jj_scan_token(VALUE)) return true;
    return false;
  }

  static private boolean jj_3_40()
 {
    if (jj_3R_parametros_268_9_34()) return true;
    return false;
  }

  static private boolean jj_3_32()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3R_expressao_278_9_29()
 {
    if (jj_3R_expressao_simples_283_9_37()) return true;
    return false;
  }

  static private boolean jj_3_20()
 {
    if (jj_3R_chamada_procedimento_212_4_26()) return true;
    return false;
  }

  static private boolean jj_3_49()
 {
    if (jj_scan_token(REF)) return true;
    return false;
  }

  static private boolean jj_3R_lista_campos_qualificados_273_9_35()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_49()) {
    jj_scanpos = xsp;
    if (jj_3_50()) {
    jj_scanpos = xsp;
    if (jj_3_51()) return true;
    }
    }
    if (jj_3R_lista_campos_mesmo_tipo_248_9_49()) return true;
    return false;
  }

  static private boolean jj_3R_parametros_268_9_34()
 {
    if (jj_3R_lista_campos_qualificados_273_9_35()) return true;
    return false;
  }

  static private boolean jj_3_30()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_38()
 {
    if (jj_scan_token(CHAR)) return true;
    return false;
  }

  static private boolean jj_3_39()
 {
    if (jj_scan_token(COMMA)) return true;
    if (jj_3R_expressao_278_9_29()) return true;
    return false;
  }

  static private boolean jj_3_63()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_expressao_278_9_29()) return true;
    return false;
  }

  static private boolean jj_3R_declaracao_funcao_263_4_18()
 {
    if (jj_scan_token(FUNCTION)) return true;
    if (jj_3R_id_335_4_19()) return true;
    return false;
  }

  static private boolean jj_3_37()
 {
    if (jj_scan_token(BOOLEAN)) return true;
    return false;
  }

  static private boolean jj_3R_lista_expressoes_253_9_31()
 {
    if (jj_3R_expressao_278_9_29()) return true;
    return false;
  }

  static private boolean jj_3R_declaracao_procedimento_258_4_17()
 {
    if (jj_scan_token(PROCEDURE)) return true;
    if (jj_3R_id_335_4_19()) return true;
    return false;
  }

  static private boolean jj_3_24()
 {
    if (jj_scan_token(ELSE)) return true;
    if (jj_3R_comando_187_5_21()) return true;
    return false;
  }

  static private boolean jj_3_19()
 {
    if (jj_3R_atribuicao_207_5_25()) return true;
    return false;
  }

  static private boolean jj_3R_lista_campos_mesmo_tipo_248_9_49()
 {
    if (jj_3R_lista_ids_172_9_46()) return true;
    return false;
  }

  static private boolean jj_3_34()
 {
    if (jj_3R_tipo_agregado_238_9_33()) return true;
    return false;
  }

  static private boolean jj_3R_agregado_homogeneo_243_9_47()
 {
    if (jj_scan_token(ARRAY)) return true;
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }

  static private boolean jj_3_36()
 {
    if (jj_scan_token(INTEGER)) return true;
    return false;
  }

  static private boolean jj_3_62()
 {
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_fator_293_5_41()) return true;
    return false;
  }

  static private boolean jj_3_23()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3R_tipo_agregado_238_9_33()
 {
    if (jj_3R_agregado_homogeneo_243_9_47()) return true;
    return false;
  }

  static private boolean jj_3R_tipo_simples_233_9_32()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_35()) {
    jj_scanpos = xsp;
    if (jj_3_36()) {
    jj_scanpos = xsp;
    if (jj_3_37()) {
    jj_scanpos = xsp;
    if (jj_3_38()) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3_35()
 {
    if (jj_scan_token(FLOAT)) return true;
    return false;
  }

  static private boolean jj_3_31()
 {
    if (jj_3R_lista_expressoes_253_9_31()) return true;
    return false;
  }

  static private boolean jj_3_61()
 {
    if (jj_3R_literal_324_9_42()) return true;
    return false;
  }

  static private boolean jj_3_33()
 {
    if (jj_3R_tipo_simples_233_9_32()) return true;
    return false;
  }

  static private boolean jj_3_18()
 {
    if (jj_3R_comando_iterativo_199_9_24()) return true;
    return false;
  }

  static private boolean jj_3R_retorno_funcao_223_9_28()
 {
    if (jj_scan_token(RETURN)) return true;
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }

  static private boolean jj_3_9()
 {
    if (jj_3R_declaracao_funcao_263_4_18()) return true;
    return false;
  }

  static private boolean jj_3_29()
 {
    if (jj_3R_lista_expressoes_253_9_31()) return true;
    return false;
  }

  static private boolean jj_3_93()
 {
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_numero_inteiro_340_9_43()) return true;
    return false;
  }

  static private boolean jj_3R_chamada_funcao_218_9_27()
 {
    if (jj_3R_id_335_4_19()) return true;
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }

  static private boolean jj_3_47()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_14()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_58()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_91()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3R_chamada_procedimento_212_4_26()
 {
    if (jj_3R_id_335_4_19()) return true;
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }

  static private boolean jj_3_17()
 {
    if (jj_3R_comando_condicional_194_9_23()) return true;
    return false;
  }

  static private boolean jj_3R_atribuicao_207_5_25()
 {
    if (jj_3R_nome_298_5_30()) return true;
    if (jj_scan_token(ASSIGN)) return true;
    return false;
  }

  static private boolean jj_3_28()
 {
    if (jj_scan_token(STEP)) return true;
    if (jj_3R_expressao_278_9_29()) return true;
    return false;
  }

  static private boolean jj_3_85()
 {
    if (jj_3R_caracter_329_10_45()) return true;
    return false;
  }

  static private boolean jj_3_27()
 {
    if (jj_scan_token(FOR)) return true;
    if (jj_3R_nome_298_5_30()) return true;
    return false;
  }

  static private boolean jj_3_26()
 {
    if (jj_scan_token(REPEAT)) return true;
    if (jj_3R_lista_comandos_182_5_20()) return true;
    return false;
  }

  static private boolean jj_3R_comando_iterativo_199_9_24()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_25()) {
    jj_scanpos = xsp;
    if (jj_3_26()) {
    jj_scanpos = xsp;
    if (jj_3_27()) {
    jj_scanpos = xsp;
    if (jj_3_28()) return true;
    }
    }
    }
    return false;
  }

  static private boolean jj_3_25()
 {
    if (jj_scan_token(WHILE)) return true;
    if (jj_3R_expressao_278_9_29()) return true;
    return false;
  }

  static private boolean jj_3_8()
 {
    if (jj_3R_declaracao_procedimento_258_4_17()) return true;
    return false;
  }

  static private boolean jj_3R_comando_condicional_194_9_23()
 {
    if (jj_scan_token(IF)) return true;
    if (jj_3R_expressao_278_9_29()) return true;
    return false;
  }

  static private boolean jj_3_2()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_84()
 {
    if (jj_scan_token(FALSE)) return true;
    return false;
  }

  static private boolean jj_3_15()
 {
    if (jj_scan_token(SEMICOLON)) return true;
    if (jj_3R_comando_187_5_21()) return true;
    return false;
  }

  static private boolean jj_3_43()
 {
    if (jj_3R_vazio_355_11_13()) return true;
    return false;
  }

  static private boolean jj_3_46()
 {
    if (jj_3R_declaracoes_147_3_12()) return true;
    return false;
  }

  static private boolean jj_3R_comando_187_5_21()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_16()) {
    jj_scanpos = xsp;
    if (jj_3_17()) {
    jj_scanpos = xsp;
    if (jj_3_18()) {
    jj_scanpos = xsp;
    if (jj_3_19()) {
    jj_scanpos = xsp;
    if (jj_3_20()) {
    jj_scanpos = xsp;
    if (jj_3_21()) {
    jj_scanpos = xsp;
    if (jj_3_22()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  static private boolean jj_3_16()
 {
    if (jj_3R_comando_composto_177_5_22()) return true;
    return false;
  }

  static private boolean jj_3_83()
 {
    if (jj_scan_token(TRUE)) return true;
    return false;
  }

  static private boolean jj_3_13()
 {
    if (jj_3R_lista_comandos_182_5_20()) return true;
    return false;
  }

  static private boolean jj_initialized_once = false;
  /** Generated Token Manager. */
  static public toyParserTokenManager token_source;
  static SimpleCharStream jj_input_stream;
  /** Current token. */
  static public Token token;
  /** Next token. */
  static public Token jj_nt;
  static private int jj_ntk;
  static private Token jj_scanpos, jj_lastpos;
  static private int jj_la;
  static private int jj_gen;
  static final private int[] jj_la1 = new int[0];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static {
	   jj_la1_init_0();
	   jj_la1_init_1();
	}
	private static void jj_la1_init_0() {
	   jj_la1_0 = new int[] {};
	}
	private static void jj_la1_init_1() {
	   jj_la1_1 = new int[] {};
	}
  static final private JJCalls[] jj_2_rtns = new JJCalls[93];
  static private boolean jj_rescan = false;
  static private int jj_gc = 0;

  /** Constructor with InputStream. */
  public toyParser(java.io.InputStream stream) {
	  this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public toyParser(java.io.InputStream stream, String encoding) {
	 if (jj_initialized_once) {
	   System.out.println("ERROR: Second call to constructor of static parser.  ");
	   System.out.println("	   You must either use ReInit() or set the JavaCC option STATIC to false");
	   System.out.println("	   during parser generation.");
	   throw new Error();
	 }
	 jj_initialized_once = true;
	 try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
	 token_source = new toyParserTokenManager(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  static public void ReInit(java.io.InputStream stream) {
	  ReInit(stream, null);
  }
  /** Reinitialise. */
  static public void ReInit(java.io.InputStream stream, String encoding) {
	 try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
	 token_source.ReInit(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 0; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public toyParser(java.io.Reader stream) {
	 if (jj_initialized_once) {
	   System.out.println("ERROR: Second call to constructor of static parser. ");
	   System.out.println("	   You must either use ReInit() or set the JavaCC option STATIC to false");
	   System.out.println("	   during parser generation.");
	   throw new Error();
	 }
	 jj_initialized_once = true;
	 jj_input_stream = new SimpleCharStream(stream, 1, 1);
	 token_source = new toyParserTokenManager(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  static public void ReInit(java.io.Reader stream) {
	if (jj_input_stream == null) {
	   jj_input_stream = new SimpleCharStream(stream, 1, 1);
	} else {
	   jj_input_stream.ReInit(stream, 1, 1);
	}
	if (token_source == null) {
 token_source = new toyParserTokenManager(jj_input_stream);
	}

	 token_source.ReInit(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public toyParser(toyParserTokenManager tm) {
	 if (jj_initialized_once) {
	   System.out.println("ERROR: Second call to constructor of static parser. ");
	   System.out.println("	   You must either use ReInit() or set the JavaCC option STATIC to false");
	   System.out.println("	   during parser generation.");
	   throw new Error();
	 }
	 jj_initialized_once = true;
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(toyParserTokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  static private Token jj_consume_token(int kind) throws ParseException {
	 Token oldToken;
	 if ((oldToken = token).next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 if (token.kind == kind) {
	   jj_gen++;
	   if (++jj_gc > 100) {
		 jj_gc = 0;
		 for (int i = 0; i < jj_2_rtns.length; i++) {
		   JJCalls c = jj_2_rtns[i];
		   while (c != null) {
			 if (c.gen < jj_gen) c.first = null;
			 c = c.next;
		   }
		 }
	   }
	   return token;
	 }
	 token = oldToken;
	 jj_kind = kind;
	 throw generateParseException();
  }

  @SuppressWarnings("serial")
  static private final class LookaheadSuccess extends java.lang.Error {
    @Override
    public Throwable fillInStackTrace() {
      return this;
    }
  }
  static private final LookaheadSuccess jj_ls = new LookaheadSuccess();
  static private boolean jj_scan_token(int kind) {
	 if (jj_scanpos == jj_lastpos) {
	   jj_la--;
	   if (jj_scanpos.next == null) {
		 jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
	   } else {
		 jj_lastpos = jj_scanpos = jj_scanpos.next;
	   }
	 } else {
	   jj_scanpos = jj_scanpos.next;
	 }
	 if (jj_rescan) {
	   int i = 0; Token tok = token;
	   while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
	   if (tok != null) jj_add_error_token(kind, i);
	 }
	 if (jj_scanpos.kind != kind) return true;
	 if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
	 return false;
  }


/** Get the next Token. */
  static final public Token getNextToken() {
	 if (token.next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 jj_gen++;
	 return token;
  }

/** Get the specific Token. */
  static final public Token getToken(int index) {
	 Token t = token;
	 for (int i = 0; i < index; i++) {
	   if (t.next != null) t = t.next;
	   else t = t.next = token_source.getNextToken();
	 }
	 return t;
  }

  static private int jj_ntk_f() {
	 if ((jj_nt=token.next) == null)
	   return (jj_ntk = (token.next=token_source.getNextToken()).kind);
	 else
	   return (jj_ntk = jj_nt.kind);
  }

  static private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  static private int[] jj_expentry;
  static private int jj_kind = -1;
  static private int[] jj_lasttokens = new int[100];
  static private int jj_endpos;

  static private void jj_add_error_token(int kind, int pos) {
	 if (pos >= 100) {
		return;
	 }

	 if (pos == jj_endpos + 1) {
	   jj_lasttokens[jj_endpos++] = kind;
	 } else if (jj_endpos != 0) {
	   jj_expentry = new int[jj_endpos];

	   for (int i = 0; i < jj_endpos; i++) {
		 jj_expentry[i] = jj_lasttokens[i];
	   }

	   for (int[] oldentry : jj_expentries) {
		 if (oldentry.length == jj_expentry.length) {
		   boolean isMatched = true;

		   for (int i = 0; i < jj_expentry.length; i++) {
			 if (oldentry[i] != jj_expentry[i]) {
			   isMatched = false;
			   break;
			 }

		   }
		   if (isMatched) {
			 jj_expentries.add(jj_expentry);
			 break;
		   }
		 }
	   }

	   if (pos != 0) {
		 jj_lasttokens[(jj_endpos = pos) - 1] = kind;
	   }
	 }
  }

  /** Generate ParseException. */
  static public ParseException generateParseException() {
	 jj_expentries.clear();
	 boolean[] la1tokens = new boolean[64];
	 if (jj_kind >= 0) {
	   la1tokens[jj_kind] = true;
	   jj_kind = -1;
	 }
	 for (int i = 0; i < 0; i++) {
	   if (jj_la1[i] == jj_gen) {
		 for (int j = 0; j < 32; j++) {
		   if ((jj_la1_0[i] & (1<<j)) != 0) {
			 la1tokens[j] = true;
		   }
		   if ((jj_la1_1[i] & (1<<j)) != 0) {
			 la1tokens[32+j] = true;
		   }
		 }
	   }
	 }
	 for (int i = 0; i < 64; i++) {
	   if (la1tokens[i]) {
		 jj_expentry = new int[1];
		 jj_expentry[0] = i;
		 jj_expentries.add(jj_expentry);
	   }
	 }
	 jj_endpos = 0;
	 jj_rescan_token();
	 jj_add_error_token(0, 0);
	 int[][] exptokseq = new int[jj_expentries.size()][];
	 for (int i = 0; i < jj_expentries.size(); i++) {
	   exptokseq[i] = jj_expentries.get(i);
	 }
	 return new ParseException(token, exptokseq, tokenImage);
  }

  static private boolean trace_enabled;

/** Trace enabled. */
  static final public boolean trace_enabled() {
	 return trace_enabled;
  }

  /** Enable tracing. */
  static final public void enable_tracing() {
  }

  /** Disable tracing. */
  static final public void disable_tracing() {
  }

  static private void jj_rescan_token() {
	 jj_rescan = true;
	 for (int i = 0; i < 93; i++) {
	   try {
		 JJCalls p = jj_2_rtns[i];

		 do {
		   if (p.gen > jj_gen) {
			 jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
			 switch (i) {
			   case 0: jj_3_1(); break;
			   case 1: jj_3_2(); break;
			   case 2: jj_3_3(); break;
			   case 3: jj_3_4(); break;
			   case 4: jj_3_5(); break;
			   case 5: jj_3_6(); break;
			   case 6: jj_3_7(); break;
			   case 7: jj_3_8(); break;
			   case 8: jj_3_9(); break;
			   case 9: jj_3_10(); break;
			   case 10: jj_3_11(); break;
			   case 11: jj_3_12(); break;
			   case 12: jj_3_13(); break;
			   case 13: jj_3_14(); break;
			   case 14: jj_3_15(); break;
			   case 15: jj_3_16(); break;
			   case 16: jj_3_17(); break;
			   case 17: jj_3_18(); break;
			   case 18: jj_3_19(); break;
			   case 19: jj_3_20(); break;
			   case 20: jj_3_21(); break;
			   case 21: jj_3_22(); break;
			   case 22: jj_3_23(); break;
			   case 23: jj_3_24(); break;
			   case 24: jj_3_25(); break;
			   case 25: jj_3_26(); break;
			   case 26: jj_3_27(); break;
			   case 27: jj_3_28(); break;
			   case 28: jj_3_29(); break;
			   case 29: jj_3_30(); break;
			   case 30: jj_3_31(); break;
			   case 31: jj_3_32(); break;
			   case 32: jj_3_33(); break;
			   case 33: jj_3_34(); break;
			   case 34: jj_3_35(); break;
			   case 35: jj_3_36(); break;
			   case 36: jj_3_37(); break;
			   case 37: jj_3_38(); break;
			   case 38: jj_3_39(); break;
			   case 39: jj_3_40(); break;
			   case 40: jj_3_41(); break;
			   case 41: jj_3_42(); break;
			   case 42: jj_3_43(); break;
			   case 43: jj_3_44(); break;
			   case 44: jj_3_45(); break;
			   case 45: jj_3_46(); break;
			   case 46: jj_3_47(); break;
			   case 47: jj_3_48(); break;
			   case 48: jj_3_49(); break;
			   case 49: jj_3_50(); break;
			   case 50: jj_3_51(); break;
			   case 51: jj_3_52(); break;
			   case 52: jj_3_53(); break;
			   case 53: jj_3_54(); break;
			   case 54: jj_3_55(); break;
			   case 55: jj_3_56(); break;
			   case 56: jj_3_57(); break;
			   case 57: jj_3_58(); break;
			   case 58: jj_3_59(); break;
			   case 59: jj_3_60(); break;
			   case 60: jj_3_61(); break;
			   case 61: jj_3_62(); break;
			   case 62: jj_3_63(); break;
			   case 63: jj_3_64(); break;
			   case 64: jj_3_65(); break;
			   case 65: jj_3_66(); break;
			   case 66: jj_3_67(); break;
			   case 67: jj_3_68(); break;
			   case 68: jj_3_69(); break;
			   case 69: jj_3_70(); break;
			   case 70: jj_3_71(); break;
			   case 71: jj_3_72(); break;
			   case 72: jj_3_73(); break;
			   case 73: jj_3_74(); break;
			   case 74: jj_3_75(); break;
			   case 75: jj_3_76(); break;
			   case 76: jj_3_77(); break;
			   case 77: jj_3_78(); break;
			   case 78: jj_3_79(); break;
			   case 79: jj_3_80(); break;
			   case 80: jj_3_81(); break;
			   case 81: jj_3_82(); break;
			   case 82: jj_3_83(); break;
			   case 83: jj_3_84(); break;
			   case 84: jj_3_85(); break;
			   case 85: jj_3_86(); break;
			   case 86: jj_3_87(); break;
			   case 87: jj_3_88(); break;
			   case 88: jj_3_89(); break;
			   case 89: jj_3_90(); break;
			   case 90: jj_3_91(); break;
			   case 91: jj_3_92(); break;
			   case 92: jj_3_93(); break;
			 }
		   }
		   p = p.next;
		 } while (p != null);

		 } catch(LookaheadSuccess ls) { }
	 }
	 jj_rescan = false;
  }

  static private void jj_save(int index, int xla) {
	 JJCalls p = jj_2_rtns[index];
	 while (p.gen > jj_gen) {
	   if (p.next == null) { p = p.next = new JJCalls(); break; }
	   p = p.next;
	 }

	 p.gen = jj_gen + xla - jj_la; 
	 p.first = token;
	 p.arg = xla;
  }

  static final class JJCalls {
	 int gen;
	 Token first;
	 int arg;
	 JJCalls next;
  }

}
